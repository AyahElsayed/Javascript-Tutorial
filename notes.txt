data types
==========
1- string
2- number
3- boolean
4- null
5- object
6- undefined

objects[abject - function - array - date]

/********************************************************/

convert strings to numbers
==========================
# + , - , if there is string return Nan
# Number('') , if there is string return Nan
# parseInt() if the number at first of statements ,with neglect strings 
# parseFloat() return floats with neglect strings if the number at first of statements

/********************************************************/

convert numbers to strings
==========================
# string()
# number.toString()

/********************************************************/
Strings 
=======
repeat
length
var[index]
charAt(index)
indexOf(‘a’) // for search
lastIndexOf(‘a’)
lastIndexOf(“a”, 6)
slice(0 , 5)
splite(‘ ‘)

cut stings
==========

    slice(start ,  end) // can use negative numbers
    subString(start ,  end) //can't use negative numbers
    subStr(start ,  length)

string search
============

    indexOf(character,  search location)
    lastIndexOf(character,  search location)
    includes(character,  search location)
    startsWith(character,  search location)
    endsWith(character,  length)


Array search
============

    indexOf(character,  search location) // -1 if not found
    lastIndexOf(character,  search location)
    includes(character,  search location) // return true or false 


conditions
==========
    if(condition){
        code if true
    }else{
        code if false
    }

    else if{
        in case more options
    }
    * another way to write
    condition ? true : false

    switch(expression){
        case 1:
            code;
            break;
        case 2:
            code;
            break;
        default:
            default code
    }
